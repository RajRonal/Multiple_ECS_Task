name: Deploy Dev,Stage And Prod Environment for Circonomy Web-App
on:
  push:
    branches:
      - dev
      - stage
      - main


jobs: 
  build-docker-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Set branch environments
        run: |-
          if [[ "${{github.base_ref}}" == "dev" || "${{github.ref}}" == "refs/heads/dev" ]]; then
             echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL_DEV }}" >> "$GITHUB_ENV"
             echo "NEXT_PUBLIC_MODE=${{ secrets.NEXT_PUBLIC_MODE_DEV }}" >> "$GITHUB_ENV"
             echo "CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}" >> "$GITHUB_ENV"
             echo "ECS_SERVICE=${{ secrets.ECS_SERVICE }}" >> "$GITHUB_ENV"
             echo "ECS_CLUSTER=${{ secrets.ECS_CLUSTER }}" >> "$GITHUB_ENV"
             echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> "$GITHUB_ENV"
             echo "AWS_TASK_DEFINITION=${{ secrets.AWS_TASK_DEFINTION }}">> "$GITHUB_ENV"
             echo "AWS_ACCESS_KEY_SECRET=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> "$GITHUB_ENV"
             echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}" >> "$GITHUB_ENV"
 
          fi
          if [[ "${{github.base_ref}}" == "stage" || "${{github.ref}}" == "refs/heads/stage" ]]; then
             echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL_STAGE }}" >> "$GITHUB_ENV"
             echo "NEXT_PUBLIC_MODE=${{ secrets.NEXT_PUBLIC_MODE_STAGE }}" >> "$GITHUB_ENV"
             echo "CONTAINER_NAME=${{ secrets.CONTAINER_NAME_STAGE }}" >> "$GITHUB_ENV"
             echo "ECS_SERVICE=${{ secrets.ECS_SERVICE_STAGE }}" >> "$GITHUB_ENV"
             echo "ECS_CLUSTER=${{ secrets.ECS_CLUSTER_STAGE }}" >> "$GITHUB_ENV"
             echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> "$GITHUB_ENV"
             echo "AWS_TASK_DEFINITION=${{ secrets.AWS_TASK_DEFINTION_STAGE }}">> "$GITHUB_ENV"
             echo "AWS_ACCESS_KEY_SECRET=${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}" >> "$GITHUB_ENV"
             echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}" >> "$GITHUB_ENV"
          fi
          if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
             
             echo "CONTAINER_NAME=test" >> "$GITHUB_ENV"
             echo "ECS_SERVICE=test" >> "$GITHUB_ENV"
             echo "ECS_CLUSTER=test" >> "$GITHUB_ENV"
             echo "AWS_REGION=ap-south-1" >> "$GITHUB_ENV"
             echo "AWS_TASK_DEFINITION=test">> "$GITHUB_ENV"
             echo "AWS_ACCESS_KEY_SECRET=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> "$GITHUB_ENV"
             echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}" >> "$GITHUB_ENV"
          fi
      - name: checkout repo
        uses: actions/checkout@v2
      - name: build image
        run: |
          docker build \
            --tag dockerimage:latest \
            .
        
      - name: configure aws ecs pipeline
        uses: RajRonal/ecs_composite_action@main
        with:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_ACCESS_KEY_SECRET }}
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_TASK_DEFINITION: ${{ env.AWS_TASK_DEFINITION }}
          ECS_CLUSTER: ${{ env.ECS_CLUSTER }}
          ECS_SERVICE: ${{ env.ECS_SERVICE }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
          DOCKER_IMAGE: dockerimage:latest

